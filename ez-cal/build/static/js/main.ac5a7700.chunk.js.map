{"version":3,"sources":["firebase.js","constants.js","LinkGenerator.js","newaddevent.js","ApiCalendar.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","PROVIDER_ID","db","database","ref","subTimes","Array","Math","ceil","fill","map","x","y","flatMap","concat","times","filter","split","LinkGenerator","props","copyCode","document","createElement","value","link","body","appendChild","select","execCommand","removeChild","setState","copied","open","show","close","state","onClick","this","className","Component","Addevents","datePH","Date","toISOString","substring","console","log","event","starttime","endtime","handleEvent","bind","handleStarttime","handleEndtime","upload","eventa","target","newStart","newEnd","createEvent","type","onChange","React","Config","require","ApiCalendar","componentDidMount","userLink","window","location","pathname","child","once","printUserName","error","alert","setOtherID","handleData","snap","val","otherUser","otherCalID","setBusy2","Object","values","checkLastDay","month","year","numberOfDays","isLeapYear","buildDayList","date","getMonth","getFullYear","weekDays","dayList","dateList","i","push","getDay","getDate","dayGrid","days","dates","timeBlock","slice","length","cal","hours","j","id","styles","display","includes","SharedCalendar","MyCalendar","Main","exact","path","component","setLink","uid","href","showEvents","googleEvents","sign","listUpcomingEvents","then","result","items","getUserID","userName","getUserName","set","getEmail","setBusy","events","start","dateTime","end","startIndex","indexOf","endIndex","nextEvent","getElementById","setFree","a","b","c","d","getElementsByClassName","innerHTML","Login","handleAuthClick","Logout","handleSignoutClick","gapi","onLoadCallback","calendar","updateSigninStatus","initClient","createEventFromNow","listenSign","onLoad","setCalendar","handleClientLoad","testcreateEvent","e","isSignedIn","client","init","auth2","getAuthInstance","listen","get","catch","script","src","onload","load","currentUser","Ab","w3","U3","signIn","newCalendar","callback","signOut","calendarId","setDate","list","time","summary","description","timeZone","getTime","insert","uploadevent","execute","reload","App","Boolean","hostname","match","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac5a7700.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDZzj4QwsGSpJmXRiVjuqgAq-5YB9EoxrE\",\n  authDomain: \"ezcal-2394a.firebaseapp.com\",\n  databaseURL: \"https://ezcal-2394a.firebaseio.com\",\n  projectId: \"ezcal-2394a\",\n  storageBucket: \"ezcal-2394a.appspot.com\",\n  messagingSenderId: \"1029216905931\",\n  appId: \"1:1029216905931:web:33ccd473548edd99ecc94e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nexport const db = firebase.database().ref(\"users\");","export const subTimes = Array(Math.ceil((24 - 9))).fill(9).map((x, y) => x + y).flatMap(x => [\":00\", \":15\", \":30\", \":45\"].map(y => x + y)).concat(\"0:00\");\nexport const times = subTimes.filter(x => x.split(\":\")[1] === \"00\");\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\n\nexport default class LinkGenerator extends Component {\n\n  static propTypes = {\n    link: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      copied: 'Copy',\n    }\n  }\n\n  copyCode = () => {\n      const x = document.createElement('textarea');\n      x.value = this.props.link\n      document.body.appendChild(x);\n      x.select();\n      document.execCommand('copy');\n      document.body.removeChild(x);\n      this.setState({\n        copied: 'Copied!'\n      })\n      return;\n    }\n\n    open = () => {\n      this.setState ({\n        show: true\n      })\n    }\n\n    close =() => {\n      this.setState({\n        show: false,\n        copied: 'Copy'\n      })\n    }\n\n\n\n\n  render() {\n\n    return (\n\n      <div>\n        <button onClick={this.open} className=\"sendInvite\"/>\n        {this.state.show ? \n\n          <div className=\"modalBackdrop\">\n            <div className=\"modalContainer\">\n                <div className=\"closeButtonWrapper\">\n                  <button onClick={this.close} className=\"closeButton\"/>\n                  <div>{this.props.link}</div>\n                  <button onClick={this.copyCode} className=\"copyButton\">{this.state.copied}</button>\n                </div>\n            </div>\n          </div> \n          : null}\n      </div>\n      )\n\n\n  }\n\n}","import React from \"react\";\nimport \"./index.css\";\n\n\nclass Addevents extends React.Component {\n  constructor(props) {\n    super(props);\n    var datePH = (new Date().toISOString().substring(0, 11));\n    console.log(datePH)\n    this.state = {\n      show: false,\n      event: '',\n      starttime: datePH+'12:00',\n      endtime: datePH+'13:00',\n    };\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handleStarttime = this.handleStarttime.bind(this);\n    this.handleEndtime = this.handleEndtime.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  handleEvent(eventa) {\n    this.setState({\n      event: eventa.target.value\n    })\n  }\n\n  handleStarttime(eventa) {\n    let newStart = eventa.target.value\n    this.setState({\n      starttime: newStart\n    })\n  }\n\n  handleEndtime(eventa) {\n    let newEnd = eventa.target.value\n    this.setState({\n      endtime: newEnd\n    })\n  }\n\n  open = () => {\n    this.setState({\n      show: true\n    })\n  }\n\n  close = () => {\n    this.setState({\n      show: false,\n    })\n  }\n\n  upload() {\n    this.props.createEvent(this.state.event, this.state.starttime + \":00\", this.state.endtime + \":00\");\n  }\n\n  render() {\n    return (\n\n      <div>\n        <button onClick={this.open} className=\"addEvent\" />\n        {this.state.show ?\n\n          <div className=\"modalBackdropAdd\">\n            <div className=\"modalContainerAdd\">\n              <div className=\"closeButtonWrapper\">\n                <button onClick={this.close} className=\"closeButton\" />\n                <div>\n                  <div>Event Title:</div>\n                  <input type=\"text\" onChange={this.handleEvent} />\n                  <div>Start Time:</div>\n                  <input type=\"datetime-local\" value={this.state.starttime} onChange={this.handleStarttime} />\n                  <div>End Time:</div>\n                  <input type=\"datetime-local\" value={this.state.endtime} onChange={this.handleEndtime} />\n                </div>\n                <button onClick={this.upload} className=\"copyButton\">Create Event</button>\n              </div>\n            </div>\n          </div>\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default Addevents;","import { db } from './firebase';\nimport { subTimes, times } from './constants';\nimport React, { Component } from 'react';\nimport LinkGenerator from \"./LinkGenerator\";\nimport { Switch, Route } from 'react-router-dom'\nimport Addevents from \"./newaddevent\";\nconst Config = require(\"./data/apiGoogleconfig.json\");\n\nexport default class ApiCalendar extends Component {\n\n  static propTypes = {\n    uid: null,\n    name: null\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      uid: null,\n      userName: null,\n      otherUser: null,\n      otherCalID: null\n    }\n    this.sign = false;\n    this.gapi = null;\n    this.onLoadCallback = null;\n    this.calendar = 'primary';\n    try {\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\n      this.initClient = this.initClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.listenSign = this.listenSign.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.handleClientLoad();\n      this.testcreateEvent = this.testcreateEvent.bind(this);\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount = () => {\n    const userLink = window.location.pathname.substring(1);\n    if (userLink) {\n      db.child(userLink).child(\"userName\").once('value', this.printUserName, error => alert(error));\n      db.child(userLink).child(\"calID\").once('value', this.setOtherID, error => alert(error));\n      db.child(userLink).child(\"events\").once('value', this.handleData, error => alert(error));\n    }\n  };\n\n  printUserName = (snap) => {\n    if (snap.val()) {\n      this.setState({\n        otherUser: snap.val(),\n      })\n    }\n  }\n\n  setOtherID = (snap) => {\n    if (snap.val()) {\n      this.setState({\n        otherCalID: snap.val()\n      })\n    }\n  }\n\n  handleData = (snap) => {\n    if (snap.val()) {\n      if (this.state.otherUser) {\n        this.setBusy2(Object.values(snap.val(), this.state.otherUser));\n      }\n    }\n  };\n\n  checkLastDay = (month, year) => {\n    var numberOfDays;\n    if (month == 4 || month == 6 || month == 9 || month == 11)\n      numberOfDays = 30;\n    else if (month == 2) {\n      const isLeapYear = (year) => (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n      if (isLeapYear(year))\n        numberOfDays = 29;\n      else\n        numberOfDays = 28;\n    }\n    else\n      numberOfDays = 31;\n\n    return numberOfDays;\n  }\n\n  buildDayList = () => {\n    let date = new Date();\n    let numberOfDays = this.checkLastDay(date.getMonth() + 1, date.getFullYear());\n    let weekDays = [\"Su\", \"M\", \"Tu\", \"W\", \"Th\", \"F\", \"Sa\"];\n    let dayList = [], dateList = [];\n\n    for (let i = 0; i < 7; i++) {\n      dayList.push(weekDays[(date.getDay() + i) % 7]);\n      if ((date.getDate() + i) > numberOfDays) {\n        dateList.push((date.getDate() + i) % (numberOfDays));\n      }\n      else {\n        dateList.push(date.getDate() + i);\n      }\n    }\n    return [dayList, dateList];\n  };\n\n  dayGrid = () => {\n    let [days, dates] = this.buildDayList();\n    let realTimes = subTimes.slice(0, subTimes.length - 1)\n    let timeBlock = realTimes.map(x => {\n      return x.split(\":\")[1] === \"00\" ? <div className=\"dayTime\">{x}</div> : <div className=\"dayTime\"></div>;\n    });\n\n    let cal = [];\n    cal.push(<div className=\"dayCol\">\n      <div className=\"dayEmpty\"></div>\n      {timeBlock}\n    </div>\n    );\n\n    for (let i = 0; i < days.length; i++) {\n      let hours = [];\n      for (let j = 0; j < subTimes.length; j++) {\n        if (subTimes[j] === \"0:00\") {\n          hours.push(<div id={`${dates[i]} ${subTimes[j]}`} styles={{ display: \"hidden\" }} />);\n        }\n        else if (times.includes(subTimes[j])) {\n          hours.push(<div id={`${dates[i]} ${subTimes[j]}`} className=\"dayHour\" />);\n        }\n        else {\n          hours.push(<div id={`${dates[i]} ${subTimes[j]}`} className=\"daySubHour\" />);\n        }\n      }\n\n      cal.push(<div className=\"dayCol\">\n        <div className=\"dayHead\">{days[i]}\n          <div className=\"dayDate\">{dates[i]}</div>\n        </div>\n        {hours}\n      </div>);\n    }\n\n\n    return (\n      <div className=\"dayWrapper\">\n        {cal}\n      </div>\n    );\n  };\n\n  SharedCalendar = () => {\n    return (\n      <div>\n        {this.dayGrid()}\n      </div>\n    );\n  };\n\n  MyCalendar = () => {\n    return (\n      <div>\n        {this.dayGrid()}\n      </div>\n    );\n  };\n\n  Main = () => {\n    return (\n      <Switch>\n        <Route exact path='/' component={this.MyCalendar} />\n        <Route path={window.location.pathname} component={this.SharedCalendar} />\n      </Switch>\n    );\n  };\n\n  /**\n   * Update connection status.\n   * @param {boolean} isSignedIn\n   */\n\n  setLink = (uid) => {\n    return window.location.href + uid;\n  };\n\n  showEvents = () => {\n    let googleEvents;\n    if (this.sign)\n      this.listUpcomingEvents()\n        .then(({ result }) => {\n          googleEvents = result.items;\n          this.setState({\n            uid: this.getUserID(),\n            userName: this.getUserName(),\n          })\n\n          db.child(this.getUserID()).child('events').set(googleEvents);\n          db.child(this.getUserID()).child('userName').set(this.getUserName());\n          db.child(this.getUserID()).child('calID').set(this.getEmail());\n\n          this.setBusy(googleEvents);\n        });\n  };\n\n  setBusy = (events) => {\n    const userLink = window.location.pathname.substring(1);\n    if (!userLink) {\n      for (let i = 0; i < events.length; i++) {\n\n        if (!events[i].start.dateTime) {\n          continue;\n        }\n        let date = events[i].start.dateTime.substring(8, 10);\n\n        if (date.substring(0, 1) === '0') {\n          date = date.substring(1);\n        }\n\n        let start = events[i].start.dateTime.substring(11, 16);\n        let end = events[i].end.dateTime.substring(11, 16);\n\n        if (start.substring(0, 1) === '0') {\n          start = start.substring(1);\n        }\n\n        if (end.substring(0, 1) === '0') {\n          end = end.substring(1);\n        }\n\n        let startIndex = subTimes.indexOf(start);\n        let endIndex = subTimes.indexOf(end);\n\n        for (let j = startIndex; j < endIndex; j++) {\n          let nextEvent = document.getElementById(`${date} ${subTimes[j]}`);\n          if (nextEvent.className.includes(\"Busy\")) {\n            continue;\n          }\n          else {\n            nextEvent.className += \"Busy\";\n          }\n        }\n      }\n    }\n    else if (userLink && this.state.uid) {\n      for (let i = 0; i < events.length; i++) {\n        if (!events[i].start.dateTime) {\n          continue;\n        }\n        let date = events[i].start.dateTime.substring(8, 10);\n        if (date.substring(0, 1) === '0') {\n          date = date.substring(1);\n        }\n        let start = events[i].start.dateTime.substring(11, 16);\n        let end = events[i].end.dateTime.substring(11, 16);\n\n        if (start.substring(0, 1) === '0') {\n          start = start.substring(1);\n        }\n        if (end.substring(0, 1) === '0') {\n          end = end.substring(1);\n        }\n\n        let startIndex = subTimes.indexOf(start);\n        let endIndex = subTimes.indexOf(end);\n\n        for (let j = startIndex; j < endIndex; j++) {\n          let nextEvent = document.getElementById(`${date} ${subTimes[j]}`);\n          if (nextEvent.className.includes(\"FriendBusy\")) {\n            if (nextEvent.className.includes(\"Sub\")) {\n              nextEvent.className = \"daySubHourOverlapBusy\"\n            }\n            else {\n              nextEvent.className = \"dayHourOverlapBusy\"\n            }\n          }\n          else {\n            nextEvent.className += \"Busy\";\n          }\n        }\n      }\n    }\n  };\n\n  setBusy2 = (events, userName) => {\n    for (let i = 0; i < events.length; i++) {\n      let date = events[i].start.dateTime.substring(8, 10);\n      if (date.substring(0, 1) === '0') {\n        date = date.substring(1);\n      }\n\n      let today = new Date().getDate();\n      if (date >= today) {\n        let start = events[i].start.dateTime.substring(11, 16);\n        let end = events[i].end.dateTime.substring(11, 16);\n\n        if (start.substring(0, 1) === '0') {\n          start = start.substring(1);\n        }\n        if (end.substring(0, 1) === '0') {\n          end = end.substring(1);\n        }\n\n        let startIndex = subTimes.indexOf(start);\n        let endIndex = subTimes.indexOf(end);\n\n        for (let j = startIndex; j < endIndex; j++) {\n          let nextEvent = document.getElementById(`${date} ${subTimes[j]}`);\n          if (nextEvent.className.includes(\"Busy\")) {\n            continue;\n          }\n          else {\n            // if (j === startIndex) {\n            //   nextEvent.innerHTML = this.state.otherUser;\n            // }\n            nextEvent.className += \"FriendBusy\";\n          }\n        }\n      }\n    }\n  }\n\n  setFree = () => {\n    let x;\n    while (document.getElementsByClassName(\"dayHourBusy\").length > 0) {\n      x = document.getElementsByClassName(\"dayHourBusy\")[0]\n      x.className = \"dayHour\"\n      x.innerHTML = \"\"\n    }\n    let y;\n    while (document.getElementsByClassName(\"daySubHourBusy\").length > 0) {\n      y = document.getElementsByClassName(\"daySubHourBusy\")[0]\n      y.className = \"daySubHour\"\n      y.innerHTML = \"\"\n    }\n    let a;\n    while (document.getElementsByClassName(\"dayHourFriendBusy\").length > 0) {\n      a = document.getElementsByClassName(\"dayHourFriendBusy\")[0]\n      a.className = \"dayHour\"\n      a.innerHTML = \"\"\n    }\n    let b;\n    while (document.getElementsByClassName(\"daySubHourFriendBusy\").length > 0) {\n      b = document.getElementsByClassName(\"daySubHourFriendBusy\")[0]\n      b.className = \"daySubHour\"\n      b.innerHTML = \"\"\n    }\n    let c;\n    while (document.getElementsByClassName(\"daySubHourOverlapBusy\").length > 0) {\n      c = document.getElementsByClassName(\"daySubHourOverlapBusy\")[0]\n      c.className = \"dayHour\"\n      c.innerHTML = \"\"\n    }\n    let d;\n    while (document.getElementsByClassName(\"dayHourOverlapBusy\").length > 0) {\n      d = document.getElementsByClassName(\"dayHourOverlapBusy\")[0]\n      d.className = \"daySubHour\"\n      d.innerHTML = \"\"\n    }\n\n  };\n\n\n  updateSigninStatus(isSignedIn) {\n    this.sign = isSignedIn;\n    if (this.getUserID()) {\n      this.showEvents();\n    }\n\n  }\n  /**\n   * Auth to the google Api.\n   */\n  initClient() {\n    this.gapi = window['gapi'];\n    this.gapi.client.init(Config)\n      .then(() => {\n        // Listen for sign-in state changes.\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n        // Handle the initial sign-in state.\n        this.updateSigninStatus(this.gapi.auth2.getAuthInstance().isSignedIn.get());\n        if (this.onLoadCallback) {\n          this.onLoadCallback();\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n  /**\n   * Init Google Api\n   * And create gapi in global\n   */\n  handleClientLoad() {\n    this.gapi = window['gapi'];\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n    script.onload = () => {\n      window['gapi'].load('client:auth2', this.initClient);\n    };\n  }\n  getUserID() {\n    return this.gapi.auth2.getAuthInstance().currentUser['Ab']['El'];\n  }\n\n  getUserName() {\n    return this.gapi.auth2.getAuthInstance().currentUser['Ab']['w3']['ig'];\n  }\n\n  getEmail() {\n    return this.gapi.auth2.getAuthInstance().currentUser.Ab.w3.U3;\n  }\n\n  /**\n   * Sign in Google user account\n   */\n  handleAuthClick() {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().signIn();\n    }\n    else {\n      console.log(\"Error: this.gapi not loaded\");\n    }\n  }\n  /**\n   * Set the default attribute calendar\n   * @param {string} newCalendar\n   */\n  setCalendar(newCalendar) {\n    this.calendar = newCalendar;\n  }\n  /**\n   * Execute the callback function when a user is disconnected or connected with the sign status.\n   * @param callback\n   */\n  listenSign(callback) {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n    }\n    else {\n      console.log(\"Error: this.gapi not loaded\");\n    }\n  }\n  /**\n   * Execute the callback function when gapi is loaded\n   * @param callback\n   */\n  onLoad(callback) {\n    if (this.gapi) {\n      callback();\n    }\n    else {\n      this.onLoadCallback = callback;\n    }\n  }\n  /**\n   * Sign out user google account\n   */\n  handleSignoutClick() {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().signOut();\n      this.setFree();\n      const userLink = window.location.pathname.substring(1);\n      if (userLink) {\n        db.child(userLink).child(\"events\").once('value', this.handleData, error => alert(error));\n      }\n    }\n    else {\n      console.log(\"Error: this.gapi not loaded\");\n    }\n  }\n  /**\n   * List all events in the calendar\n   * @param {number} maxResults to see\n   * @param {string} calendarId to see by default use the calendar attribute\n   * @returns {any}\n   */\n  listUpcomingEvents(calendarId = this.calendar) {\n    if (this.gapi) {\n      let d = new Date();\n      d.setDate(d.getDate() + 7);\n      return this.gapi.client.calendar.events.list({\n        'calendarId': calendarId,\n        'timeMin': (new Date()).toISOString(),\n        'timeMax': d.toISOString(),\n        'showDeleted': false,\n        'singleEvents': true,\n        'orderBy': 'startTime'\n      });\n    }\n    else {\n      console.log(\"Error: this.gapi not loaded\");\n      return false;\n    }\n  }\n  /**\n   * Create an event from the current time for a certain period\n   * @param {number} time in minutes for the event\n   * @param {string} summary of the event\n   * @param {string} description of the event\n   * @param {string} calendarId\n   * @returns {any}\n   */\n  createEventFromNow({ time, summary, description = '' }, calendarId = this.calendar) {\n    const event = {\n      summary,\n      description,\n      start: {\n        dateTime: (new Date()).toISOString(),\n        timeZone: \"Europe/Paris\",\n      },\n      end: {\n        dateTime: (new Date(new Date().getTime() + time * 60000)),\n        timeZone: \"Europe/Paris\",\n      }\n    };\n    return this.gapi.client.calendar.events.insert({\n      'calendarId': calendarId,\n      'resource': event,\n    });\n  }\n  /**\n   * Create Calendar event\n   * @param {string} calendarId for the event.\n   * @param {object} event with start and end dateTime\n   * @returns {any}\n   */\n  createEvent(event, calendarId = this.calendar) {\n\n    return this.gapi.client.calendar.events.insert({\n      'calendarId': calendarId,\n      'resource': event,\n    });\n  }\n\n  testcreateEvent(event, starttime, endtime) {\n\n    var attendees = this.state.otherCalID ? [{ \"email\": this.state.otherCalID }] : [];\n\n    var uploadevent = {\n      'summary': event,\n      'description': '',\n      'start': {\n        'dateTime': starttime,\n        'timeZone': 'America/Chicago'\n      },\n      'end': {\n        'dateTime': endtime,\n        'timeZone': 'America/Chicago'\n      },\n      'attendees': attendees\n    };\n\n    var request = this.gapi.client.calendar.events.insert({\n      'calendarId': this.calendar,\n      'resource': uploadevent\n    });\n\n    request.execute();\n\n    window.location.reload();\n  }\n\n\n  Login = () => {\n    this.handleAuthClick();\n  }\n\n  Logout = () => {\n    this.handleSignoutClick();\n    this.setState({\n      uid: null,\n      userName: null,\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.state.uid ? <button onClick={() => this.Logout()}>Sign out</button> : null}\n\n        {this.state.uid ? <div>Welcome, {this.state.userName}!</div> : <button onClick={() => { this.Login() }}>Sync with Google</button>}\n        {(this.state.userName && !this.state.otherUser) ? <LinkGenerator link={this.setLink(this.state.uid)} /> : null}\n        <Addevents createEvent={this.testcreateEvent} />\n        {this.Main()}\n      </div>\n    )\n  }\n}\nlet apiCalendar;\ntry {\n  apiCalendar = new ApiCalendar();\n}\ncatch (e) {\n  console.log(e);\n}\n\n\n","import React, { Component } from 'react';\nimport ApiCalendar from \"./ApiCalendar\";\nimport { Switch, Route } from 'react-router-dom'\nimport \"./App.css\";\nimport {db} from './firebase';\nimport {subTimes, times} from './constants';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <ApiCalendar/>\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}